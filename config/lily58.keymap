/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/* Layers */
#define BASE 0
#define NAV 1
#define SYM 2
#define WIN 3

/* Window Management */
#define WIN_LEFT LC(LA(LEFT))
#define WIN_RIGHT LC(LA(RIGHT))
#define WIN_MAX LC(LA(UP))
#define WIN_MIN LC(LA(DOWN))
#define MOVE_MON_L LG(LS(LEFT))
#define MOVE_MON_R LG(LS(RIGHT))
#define DESK_LEFT LC(LG(LEFT))
#define DESK_RIGHT LC(LG(RIGHT))
#define TASK_VIEW LG(TAB)
#define SHOW_DESK LG(D)
#define MIN_OTHERS LG(HOME)

/* Shortcuts */
#define TSEARCH LC(E)
#define SPOTLIGHT LA(SPACE)
#define NEW_TAB LC(T)
#define CLOSE_TAB LC(W)
#define ALTTAB LAG(TAB)

/ {
    behaviors {
        mhl: left_hand_positional_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
            quick-tap-ms = <150>;
            global-quick-tap;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <30 31 32 33 34 35 36 37 38 39 40 41>;
        };
        
        mhr: right_hand_positional_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
            quick-tap-ms = <150>;
            global-quick-tap;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <0 1 2 3 4 5 6 7 8 9 10 11>;
        };

        td_tab: tap_dance_tab {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp TAB>, <&kp ALTTAB>;
        };

        td_grave: tap_dance_grave {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp GRAVE>, <&kp LG(GRAVE)>;
        };

        td_bspc: tap_dance_bspc {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp BSPC>, <&kp LC(BSPC)>;
        };

        td_esc: tap_dance_escape {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp ESC>, <&kp LA(F4)>;
        };

        td_semi: tap_dance_semi {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp SEMI>, <&macro_cs_func>;
        };

        td_brc: tap_dance_brace {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LBRC>, <&macro_cs_braces>;
        };

        td_quote: tap_dance_quote {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp SQT>, <&macro_cs_interp>;
        };
    };

    macros {
        macro_cs_func: cs_function {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <30>;
            tap-ms = <40>;
            bindings = <&kp SEMI &kp RET &kp LBRC &kp RET &kp RBRC>;
        };

        macro_cs_braces: cs_braces {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <30>;
            tap-ms = <40>;
            bindings = <&kp LBRC &kp RET &kp RBRC>;
        };

        macro_cs_interp: cs_string_interpolation {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <30>;
            tap-ms = <40>;
            bindings = <&kp DLLR &kp DQT &kp DQT &kp LEFT>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&td_esc    &kp N1   &kp N2   &kp N3      &kp N4     &kp N5                              &kp N6     &kp N7     &kp N8    &kp N9   &kp N0    &kp MINUS
&td_tab    &kp Q    &kp W    &kp E       &kp R      &kp T                               &kp Y      &kp U      &kp I     &kp O    &kp P     &kp EQUAL
&kp LSHFT  &kp A    LHLT(S)  LHRT(D)     &kp F      &kp G                               &kp H      RHLT(J)    RHRT(K)   &kp L    &td_semi  &td_quote
&kp LCTRL  &kp Z    &kp X    &kp C       &kp V      &kp B      &kp LBKT    &kp RBKT    &kp N      &kp M      &kp COMMA &kp DOT  &kp FSLH  &kp BSLH
                             &kp LGUI    &kp LALT   &kp SPACE  &kp RET     &td_bspc    &kp DEL    &mo NAV    &mo SYM
            >;
        };

        nav_layer {
            bindings = <
&trans     &kp TSEARCH &kp NEW_TAB &kp CLOSE_TAB &none    &none                          &none     &none     &kp UP    &none    &none     &none
&none      &none       &none       &none         &none    &none                          &none     &kp HOME  &kp UP    &kp END  &kp PG_UP &none
&trans     &kp LALT    &kp LCTRL   &kp LSHFT     &none    &none                          &none     &kp LEFT  &kp DOWN  &kp RIGHT &kp PG_DN &none
&trans     &kp LC(Z)   &kp LC(Y)   &kp ALTTAB    &kp LC(S) &SPOTLIGHT &trans   &trans    &none     &none     &mo WIN   &none     &none     &none
                                  &trans        &trans    &trans     &trans   &trans    &trans    &trans    &trans
            >;
        };

        sym_layer {
            bindings = <
&kp F1     &kp F2     &kp F3     &kp F4     &kp F5     &kp F6                             &kp F7    &kp F8    &kp F9    &kp F10   &kp F11   &kp F12
&td_grave  &kp EXCL   &kp AT     &kp HASH   &kp DLLR   &kp PRCNT                          &kp CARET &kp AMPS  &kp STAR  &kp LPAR  &kp RPAR  &kp PLUS
&trans     &kp GRAVE  &kp MINUS  &kp EQUAL  &kp LBKT   &kp RBKT                           &td_brc   &kp RBRC  &kp LPAR  &kp RPAR  &kp COLON &kp DQT
&trans     &none      &none      &none      &kp LT     &kp GT     &trans      &trans      &kp PIPE  &kp UNDER &kp LT    &kp GT    &kp QMARK &kp BSLH
                                &trans     &trans     &trans     &trans      &trans      &trans    &trans    &trans
            >;
        };

        win_layer {
            bindings = <
&none      &none        &none        &TASK_VIEW   &SHOW_DESK   &MIN_OTHERS                         &none        &none        &WIN_MAX     &none        &none        &none
&none      &none        &none        &none        &none        &none                               &none        &none        &kp UP       &none        &none        &none
&none      &none        &DESK_LEFT   &none        &DESK_RIGHT  &none                               &none        &kp LEFT     &kp DOWN     &kp RIGHT    &none        &none
&none      &none        &none        &none        &MOVE_MON_L  &MOVE_MON_R  &none       &none     &none        &none        &trans       &none        &none        &none
                                    &trans       &trans       &trans       &trans      &trans     &trans       &trans       &trans
            >;
        };
    };
};
