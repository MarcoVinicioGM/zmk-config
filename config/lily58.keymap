/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/* Layers */
#define BASE 0
#define NAV 1
#define SYM 2
#define WIN 3
#define GAME 4
#define SUB_G 5

/* Window Management */
#define WIN_LEFT LC(LA(LEFT))
#define WIN_RIGHT LC(LA(RIGHT))
#define WIN_MAX LC(LA(UP))
#define WIN_MIN LC(LA(DOWN))
#define MOVE_MON_L LG(LS(LEFT))
#define MOVE_MON_R LG(LS(RIGHT))
#define DESK_LEFT LC(LG(LEFT))
#define DESK_RIGHT LC(LG(RIGHT))
#define TASK_VIEW LG(TAB)
#define SHOW_DESK LG(D)
#define MIN_OTHERS LG(HOME)

/* Shortcuts */
#define TSEARCH LC(E)
#define SPOTLIGHT LA(SPACE)
#define NEW_TAB LC(T)
#define CLOSE_TAB LC(W)
#define ALTTAB LAG(TAB)

/ {
    behaviors {
        mhl: left_hand_positional_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
            quick-tap-ms = <150>;
            global-quick-tap;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <30 31 32 33 34 35 36 37 38 39 40 41>;
        };
        
        mhr: right_hand_positional_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
            quick-tap-ms = <150>;
            global-quick-tap;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <0 1 2 3 4 5 6 7 8 9 10 11>;
        };

        // Tap dance behaviors remain the same...
        [Previous tap dance definitions remain exactly the same...]
    };

    combos {
        compatible = "zmk,combos";
        
        Toggle_Gaming_Layer {
            bindings = <&tog GAME>;
            key-positions = <42 43>;  // Adjust these positions based on your layout
            slow-release;
            layers = <BASE GAME>;
        };
    };

    macros {
        [Previous macro definitions remain exactly the same...]
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            [Previous default layer remains exactly the same...]
        };

        nav_layer {
            [Previous nav layer remains exactly the same...]
        };

        sym_layer {
            [Previous sym layer remains exactly the same...]
        };

        win_layer {
            [Previous win layer remains exactly the same...]
        };

        gaming_layer {
            bindings = <
&kp ESC    &kp N1     &kp N2  &kp N3    &kp N4  &kp N5                             &kp N6    &kp N7   &kp N8    &kp N9     &kp N0   &kp MINUS
&kp TAB    &kp GRAVE  &kp Q   &kp W     &kp E   &kp R                              &kp T     &kp Y    &kp U     &kp I      &kp O    &kp P
&kp LSHFT  &kp LSHFT  &kp A   &kp S     &kp D   &kp F                              &kp G     &kp H    &kp J     &kp K      &kp L    &kp SEMI
&kp LCTRL  &kp LCTRL  &kp Z   &kp X     &kp C   &kp V      &kp G        &trans     &kp B     &kp N    &kp M     &kp COMMA  &kp DOT  &kp FSLH
                              &kp LALT  &mo SUB_G   &kp SPACE  &kp SPACE    &kp ENTER  &kp BSPC  &kp DEL  &kp LGUI
            >;
        };

        sub_gaming_layer {
            bindings = <
&kp ESC    &kp N6  &kp N7  &kp N8    &kp N9     &kp N0                          &trans  &trans  &trans  &trans  &trans  &trans
&kp TAB    &kp T   &kp Y   &kp U     &kp I      &kp O                           &trans  &trans  &trans  &trans  &trans  &trans
&kp LSHFT  &kp H   &kp J   &kp K     &kp L      &kp SEMI                        &trans  &trans  &trans  &trans  &trans  &trans
&kp LCTRL  &kp B   &kp N   &kp M     &kp COMMA  &kp DOT    &kp P        &trans  &trans  &trans  &trans  &trans  &trans  &trans
                           &kp LALT  &trans     &kp SPACE  &kp ENTER    &trans  &trans  &trans  &trans
            >;
        };
    };
};
