#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/* Layers */
#define DEF_L 0
#define NAV_L 1
#define SYM_L 2
#define GAME_L 3
#define SUB_G_L 4

/* Shortcuts */
#define CUT LC(X)
#define COPY LC(C)
#define PASTE LC(V)
#define UNDO LC(Z)
#define SLALL LC(A)
#define FIRST LC(HOME)
#define LAST LC(END)

/* Key Position Groups */
#define KEYS_LEFT 0 1 2 3 4 10 11 12 13 14 20 21 22
#define KEYS_RIGHT 5 6 7 8 9 15 16 17 18 19 23 24 25
#define KEYS_THUMBS 26 27 28 29 

&sk {
    release-after-ms = <250>;
    quick-release;
};

&sl {
    release-after-ms = <250>;
};

/ {
    combos {
        compatible = "zmk,combos";
        
        Toggle_Gaming_Layer {
            bindings = <&tog GAME_L>;
            key-positions = <42 43>;
            slow-release;
            layers = <DEF_L GAME_L>;
        };

        /* Letters */
        v { key-positions = <1 2>; bindings = <&kp V>; layers = <DEF_L>; };
        q { key-positions = <2 3>; bindings = <&kp Q>; layers = <DEF_L>; };
        z { key-positions = <20 21>; bindings = <&kp Z>; layers = <DEF_L>; };

        /* Keep other combos from base.keymap */
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
                &kp X     &kp C     &kp L     &kp F     &kp P       &kp K     &kp Y     &kp O     &kp U     &kp QUOT
                &kp R     &kp S     &kp N     &kp T     &kp B       &kp J     &kp H     &kp E     &kp I     &kp A
                          &kp W     &kp M     &kp G                           &kp D     &kp COMMA &kp DOT
                                    &sl NAV_L &kp SPACE             &sk LSHFT &sl SYM_L
            >;
        };

        /* Keep NAV and SYM layers from base.keymap */

        gaming_layer {
            bindings = <
                &kp ESC    &kp N1     &kp N2  &kp N3    &kp N4  &kp N5                             &kp N6    &kp N7   &kp N8    &kp N9     &kp N0   &kp MINUS
                &kp TAB    &kp GRAVE  &kp Q   &kp W     &kp E   &kp R                              &kp T     &kp Y    &kp U     &kp I      &kp O    &kp P
                &kp LSHFT  &kp LSHFT  &kp A   &kp S     &kp D   &kp F                              &kp G     &kp H    &kp J     &kp K      &kp L    &kp SEMI
                &kp LCTRL  &kp LCTRL  &kp Z   &kp X     &kp C   &kp V      &kp G        &trans     &kp B     &kp N    &kp M     &kp COMMA  &kp DOT  &kp FSLH
                                              &kp LALT  &mo SUB_G_L   &kp SPACE  &kp SPACE    &kp ENTER  &kp BSPC  &kp DEL  &kp LGUI
            >;
        };

        sub_gaming_layer {
            bindings = <
                &kp ESC    &kp N6  &kp N7  &kp N8    &kp N9     &kp N0                          &trans  &trans  &trans  &trans  &trans  &trans
                &kp TAB    &kp T   &kp Y   &kp U     &kp I      &kp O                           &trans  &trans  &trans  &trans  &trans  &trans
                &kp LSHFT  &kp H   &kp J   &kp K     &kp L      &kp SEMI                        &trans  &trans  &trans  &trans  &trans  &trans
                &kp LCTRL  &kp B   &kp N   &kp M     &kp COMMA  &kp DOT    &kp P        &trans  &trans  &trans  &trans  &trans  &trans  &trans
                                           &kp LALT  &trans     &kp SPACE  &kp ENTER    &trans  &trans  &trans  &trans
            >;
        };
    };
};
