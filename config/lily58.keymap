/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        mhl: left_hand_positional_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
            quick-tap-ms = <150>;
            global-quick-tap;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <30 31 32 33 34 35 36 37 38 39 40 41>;
        };
        
        mhr: right_hand_positional_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
            quick-tap-ms = <150>;
            global-quick-tap;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <0 1 2 3 4 5 6 7 8 9 10 11>;
        };

        td_tab: tap_dance_tab {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp TAB>, <&kp LA(LG(TAB))>;
        };

        td_grave: tap_dance_grave {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp GRAVE>, <&kp LG(GRAVE)>;
        };

        td_bspc: tap_dance_bspc {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp BSPC>, <&kp LC(BSPC)>;
        };

        td_esc: tap_dance_escape {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp ESC>, <&kp LA(F4)>;
        };

        td_semi: tap_dance_semi {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp SEMI>, <&macro_cs_func>;
        };
    };

    macros {
        macro_cs_func: cs_function {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <30>;
            tap-ms = <40>;
            bindings = <&kp SEMI &kp RET &kp LBRC &kp RET &kp RBRC>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&td_esc    &kp N1     &kp N2        &kp N3        &kp N4     &kp N5                              &kp N6     &kp N7        &kp N8        &kp N9   &kp N0    &kp MINUS
&td_tab    &kp Q      &kp W         &kp E         &kp R      &kp T                               &kp Y      &kp U         &kp I         &kp O    &kp P     &kp EQUAL
&kp LSHFT  &kp A      &mhl LCTRL S  &mhl LALT D   &kp F      &kp G                               &kp H      &mhr RCTRL J  &mhr RALT K   &kp L    &td_semi  &kp SQT
&kp LCTRL  &kp Z      &kp X         &kp C         &kp V      &kp B      &kp LBKT    &kp RBKT    &kp N      &kp M         &kp COMMA     &kp DOT  &kp FSLH  &kp BSLH
                                    &kp LGUI      &kp LALT   &kp SPACE  &kp RET     &td_bspc    &kp DEL    &mo 1         &mo 2
            >;
        };

        nav_layer {
            bindings = <
&trans     &kp LC(E)   &kp LC(T)   &kp LC(W)     &none      &none                          &none     &none     &kp UP    &none    &none     &none
&none      &none       &none       &none         &none      &none                          &none     &kp HOME  &kp UP    &kp END  &kp PG_UP &none
&trans     &kp LALT    &kp LCTRL   &kp LSHFT     &none      &none                          &none     &kp LEFT  &kp DOWN  &kp RIGHT &kp PG_DN &none
&trans     &kp LC(Z)   &kp LC(Y)   &kp LA(TAB)   &kp LC(S)  &kp LA(SPACE) &trans  &trans   &none     &none     &mo 3     &none     &none     &none
                                  &trans        &trans      &trans        &trans  &trans   &trans    &trans    &trans
            >;
        };

        sym_layer {
            bindings = <
&kp F1     &kp F2     &kp F3     &kp F4     &kp F5     &kp F6                             &kp F7    &kp F8    &kp F9    &kp F10   &kp F11   &kp F12
&td_grave  &kp EXCL   &kp AT     &kp HASH   &kp DLLR   &kp PRCNT                          &kp CARET &kp AMPS  &kp STAR  &kp LPAR  &kp RPAR  &kp PLUS
&trans     &kp GRAVE  &kp MINUS  &kp EQUAL  &kp LBKT   &kp RBKT                           &kp LBRC  &kp RBRC  &kp LPAR  &kp RPAR  &kp COLON &kp DQT
&trans     &none      &none      &none      &kp LT     &kp GT     &trans      &trans      &kp PIPE  &kp UNDER &kp LT    &kp GT    &kp QMARK &kp BSLH
                                &trans     &trans     &trans     &trans      &trans      &trans    &trans    &trans
            >;
        };

        win_layer {
            bindings = <
&none      &none        &none           &kp LG(TAB)   &kp LG(D)     &kp LG(HOME)                       &none        &none        &kp LC(LA(UP))    &none        &none        &none
&none      &none        &none           &none         &none         &none                               &none        &none        &kp UP            &none        &none        &none
&none      &none        &kp LC(LG(LEFT)) &none        &kp LC(LG(RIGHT)) &none                          &none        &kp LEFT     &kp DOWN          &kp RIGHT    &none        &none
&none      &none        &none           &none         &kp LG(LS(LEFT)) &kp LG(LS(RIGHT)) &none  &none  &none        &none        &trans            &none        &none        &none
                                       &trans        &trans        &trans           &trans &trans     &trans       &trans       &trans
            >;
        };

        gaming_layer {
            bindings = <
&kp ESC    &kp N1     &kp N2     &kp N3    &kp N4     &kp N5                             &kp N6    &kp N7   &kp N8    &kp N9     &kp N0   &kp MINUS
&kp TAB    &kp GRAVE  &kp Q      &kp W     &kp E      &kp R                              &kp T     &kp Y    &kp U     &kp I      &kp O    &kp P
&kp LSHFT  &kp LSHFT  &kp A      &kp S     &kp D      &kp F                              &kp G     &kp H    &kp J     &kp K      &kp L    &kp SEMI
&kp LCTRL  &kp LCTRL  &kp Z      &kp X     &kp C      &kp V      &kp G        &trans     &kp B     &kp N    &kp M     &kp COMMA  &kp DOT  &kp FSLH
                                &kp LALT  &mo 5      &kp SPACE  &kp SPACE    &kp ENTER  &kp BSPC  &kp DEL  &kp LGUI
            >;
        };

        sub_gaming_layer {
            bindings = <
&kp ESC    &kp N6     &kp N7     &kp N8    &kp N9     &kp N0                             &trans    &trans   &trans    &trans     &trans   &trans
&kp TAB    &kp T      &kp Y      &kp U     &kp I      &kp O                              &trans    &trans   &trans    &trans     &trans   &trans
&kp LSHFT  &kp H      &kp J      &kp K     &kp L      &kp SEMI                           &trans    &trans   &trans    &trans     &trans   &trans
&kp LCTRL  &kp B      &kp N      &kp M     &kp COMMA  &kp DOT    &kp P        &trans     &trans    &trans   &trans    &trans     &trans   &trans
                                &kp LALT  &trans     &kp SPACE  &kp ENTER    &trans     &trans    &trans   &trans
            >;
        };
    };
};
