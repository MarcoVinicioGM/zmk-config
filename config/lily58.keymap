/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    macros {
        functionCall: functionCall {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp LPAR &kp RPAR &kp SEMI>;
            label = "FUNCTIONCALL";
        };

        createFunction: createFunction {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp LPAR &kp RPAR &kp RET &kp RBKT &kp RET &kp RBRC>;
            label = "CREATEFUNCTION";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   | BSPC  |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   \   |
            // |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //                     | GUI  | LALT | SPC  | LOWER  |  | RAISE |ENTER | RAISE | GUI   |

            bindings = <
&kp ESC    &kp N1  &kp N2  &kp N3        &kp N4              &kp N5                           &kp N6  &kp N7  &kp N8     &kp N9   &kp N0    &kp BSPC
&kp TAB    &kp Q   &kp W   &kp E         &kp R               &kp T                            &kp Y   &kp U   &kp I      &kp O    &kp P     &kp BSLH
&kp LCTRL  &kp A   &kp S   &kp D         &kp F               &kp G                            &kp H   &kp J   &kp K      &kp L    &kp SEMI  &kp SQT
&kp LSHFT  &kp Z   &kp X   &kp C         &kp V               &kp B    &mo 1        &to 1      &kp N   &kp M   &kp COMMA  &kp DOT  &kp FSLH  &tog 2
                           &kp LEFT_ALT  &mt LEFT_ALT RMETA  &kp RET  &kp SPACE    &kp SPACE  &none   &none   &none
            >;
        };

        //         lower_layer {
        // // ------------------------------------------------------------------------------------------------------------
        // // | BTCLR | BT1 | BT2 |  BT3 |  BT4 |  BT5 |                   |      |       |       |      |       |       |
        // // |  F1   |  F2 |  F3 |  F4  |  F5  |  F6  |                   |  F7  |  F8   |  F9   |  F10 |  F11  |  F12  |
        // // |   `   |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   ~   |
        // // |       |     |     |      |      |      |        |  |       |      |  _    |  +    |  {   |   }   |  "|"  |
        // //                     |      |      |      |        |  |       |      |       |       |
        //             bindings = <
        // &bt BT_CLR &bt BT_SEL 0     &bt BT_SEL 1      &bt BT_SEL 2      &bt BT_SEL 3 &bt BT_SEL 4                 &trans    &trans    &trans          &trans    &trans    &trans
        // &kp F1     &kp F2           &kp F3            &kp F4            &kp F5       &kp F6                       &kp F7    &kp F8    &kp F9          &kp F10   &kp F11   &kp F12
        // &kp GRAVE  &kp EXCL         &kp AT            &kp HASH          &kp DOLLAR   &kp PRCNT                    &kp CARET &kp AMPS  &kp KP_MULTIPLY &kp LPAR  &kp RPAR  &kp TILDE
        // &trans     &ext_power EP_ON &ext_power EP_OFF &ext_power EP_TOG &trans       &trans    &trans   &trans    &trans    &kp MINUS &kp KP_PLUS     &kp LBRC  &kp RBRC  &kp PIPE
        //                                               &trans            &trans       &trans    &trans   &trans    &trans    &trans    &trans
        //             >;
        //             sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        //         };

        layer_1 {
            bindings = <
&trans  &kp F1    &kp F2       &kp F3    &kp F4       &kp F5                        &kp F6         &kp F7         &kp F10          &kp F11               &kp F12                &trans
&trans  &kp EXCL  &kp AT_SIGN  &kp HASH  &kp PERCENT  &kp DOLLAR                    &kp CARET      &functionCall  &createFunction  &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &trans
&trans  &trans    &trans       &trans    &trans       &trans                        &kp AMPERSAND  &kp EQUAL      &kp PLUS         &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans
&trans  &trans    &trans       &trans    &trans       &trans      &trans    &trans  &kp ASTERISK   &trans         &trans           &trans                &kp PIPE               &trans
                               &trans    &trans       &trans      &trans    &trans  &trans         &trans         &trans
            >;
        };

        layer_2 {
            bindings = <
&kp GRAVE  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5                            &kp N6    &kp N7  &kp N8  &kp N9  &kp N0  &kp EQUAL
&kp BSLH   &kp B   &kp Y   &kp O   &kp U   &kp SQT                           &kp SEMI  &kp L   &kp D   &kp W   &kp V   &kp Z
&kp CAPS   &kp C   &kp I   &kp E   &kp A   &kp COMMA                         &kp DOT   &kp H   &kp T   &kp S   &kp N   &kp Q
&kp LSHFT  &kp G   &kp X   &kp J   &kp K   &kp MINUS  &trans      &trans     &kp FSLH  &kp R   &kp M   &kp F   &kp P   &kp LSHFT
                           &to 0   &to 3   &kp ENTER  &kp BSPC    &kp SPACE  &trans    &trans  &trans
            >;
        };

        layer_3 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans
            >;
        };
    };
};
